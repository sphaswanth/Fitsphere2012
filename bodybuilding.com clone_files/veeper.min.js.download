!function() {
    const n = window.location.origin, f = n + "/apps/veeper/api/proxy/", L = [ /\/product(s?)\//i, /\/collection(s?)\//i, /\/cart\/(update|add|change)(\.js)?/i ];
    var t = (() => {
        const l = window?.vcustom || {}, b = window?.vconfig || {}, {
            pageType: s,
            selector: _
        } = window?.vconfig || {}, e = localStorage.getItem("vdebug") || !1, x = (t, e = document) => e.querySelector(t), D = (t, e = document) => e.querySelectorAll(t), i = () => Date.now() - 6e4 * new Date().getTimezoneOffset(), p = t => new URLSearchParams(window.location.search).get(t), C = t => e ? console.dir(t, {
            depth: null
        }) : null, d = t => /\.[^\/]+$/.test(t), u = (t, e) => {
            document.dispatchEvent(new CustomEvent(t, {
                detail: e
            }));
        }, h = async (t, e, a) => {
            var n = new Date(Date.now() + 1e3 * a).toUTCString();
            document.cookie = t + `=${e}; expires=${n}; Max-Age=${a}; path=/`;
        }, o = t => {
            let e = 0, a = null, n = t;
            for (;n && n !== document.body; ) {
                var i = n.parentElement;
                if (!i || i === document.body) break;
                if (n.clientWidth === i.clientWidth) {
                    a = n;
                    break;
                }
                e++, n = i;
            }
            return a;
        };
        const v = e => {
            var t = {
                url: [ "navidium" ],
                vendor: [ "Onward", "Order Protection", "re:do" ]
            };
            for (const a in t) if (e?.[a] && t[a].some(t => e[a].includes(t))) return !0;
            return !1;
        }, c = (n, t) => {
            t = document.querySelectorAll(t) || [];
            let i = [];
            return t.forEach(t => {
                var e = new RegExp(n, "i"), a = t?.innerText?.replace(/[^A-Za-z]/g, "") || "";
                e.test(a) && i.push(t);
            }), i;
        }, g = (t, e) => {
            try {
                return t.parentElement.querySelector(e) === t;
            } catch (t) {
                return !1;
            }
        };
        const r = async () => ({
            current_date: new Date().toLocaleDateString("en-US"),
            timestamp: i(),
            campaign_id: await (async t => {
                t = document.cookie.match(new RegExp("(^| )" + t + "=([^;]+)"));
                return t ? decodeURIComponent(t[2]) : null;
            })("campaign_id") || null
        }), $ = t => {
            return (b?.moneyFormat || "{{amount}}").replace(/\{\{.*?\}\}/g, parseFloat(t).toFixed(2)).replace("USD", "").trim();
        }, S = (t, e = !0) => {
            let a = parseFloat(t);
            var t = parseFloat(window?.Shopify?.currency?.rate) || 1, n = t < 1 ? .1 : t < 10 ? 1 : t < 100 ? 10 : 100;
            return a = 1 !== t ? e ? Math.ceil(a * t / n) * n : a * t : a;
        }, m = async t => {
            await fetch("/cart/update.js?ignore=veeper", {
                method: "POST",
                body: JSON.stringify(t),
                headers: {
                    "X-Requested-With": "XMLHttpRequest",
                    "Content-Type": "application/json;"
                }
            });
        };
        const y = (t, a) => t.length === a.length && t.every(e => a.find(t => e.product_id === t.product_id && e.variant_id === t.variant_id && e.quantity === t.quantity)), T = async (t = {}) => {
            var {
                code: t,
                shipping: e,
                apply: a
            } = t;
            await h("discount_code", t, 21600), t && a && await fetch(n + "/discount/" + t), 
            e && a && await fetch(n + "/discount/" + e);
        }, w = async (t, e, a, n, i) => {
            if (C({
                price: e,
                discount: a,
                percentage: n,
                el: t,
                type: i
            }), t?.sale) {
                var i = (t => {
                    let e = "";
                    var a = t ? t.split(",") : [];
                    for (let t = 0; t < a.length; t++) if (x(a[t])) {
                        e = a[t];
                        break;
                    }
                    return e;
                })(_?.[i]?.sale), r = "inline-flex", o = t.sale, c = i.replace(/\s+/g, " ").trim().split(" ");
                if (0 !== c.length) {
                    let t = c.pop();
                    for (;o !== document.body && t && o; ) {
                        var l = g(o, t), s = o ? window.getComputedStyle(o).display : null;
                        C(l, t, s, o), l && "none" === s ? (t = c?.length ? c.pop() : "", 
                        o.style.display = r, o.setAttribute("style", "display: " + r)) : l && (t = c?.length ? c.pop() : ""), 
                        o = o.parentElement;
                    }
                }
                t.sale.innerHTML = `<span style="text-decoration: line-through; color: ${vtheme?.price?.original || "black"}; padding-right: 8px;">${$(S(e))}</span><span style="color: ${vtheme?.price?.sale || "red"}; padding-right: 8px;">${$(S(e) - S(a, !1))}</span>`, 
                t?.regular && (t.regular.style.display = "none"), t?.compare && (t.compare.style.display = "none"), 
                t?.savingPrice && (t.savingPrice.innerHTML = "Save " + $(S(a, !1))), 
                t?.savingRatio && (t.savingRatio.innerHTML = n + "%");
            }
        }, E = async (t, e, i, a, r) => {
            C({
                type: r,
                elCart: e,
                lineItems: i,
                discounts: a
            });
            var {
                products: a,
                discount_value: n,
                subtotal: o
            } = a || {}, c = D(_?.[r]?.item, e);
            C({
                type: r,
                elItems: c
            });
            for (const y of a) {
                let {
                    q: t,
                    vid: e,
                    price: a,
                    discount: n
                } = y;
                var l = i.findIndex(t => parseInt(t.id) === parseInt(e));
                if (-1 !== l) {
                    var s = parseFloat(a), p = parseFloat(n) / t;
                    if (p) {
                        var d = s * t, u = p * t, h = (C({
                            itemPrice: s,
                            itemDiscount: p,
                            totalPrice: d,
                            totalDiscount: u
                        }), `<span style="display: inline-flex; flex-direction: row; flex-wrap: wrap; column-gap: 8px;"><span style="text-decoration: line-through; color: ${vtheme?.price?.original || "black"}">${$(S(s))}</span><span style="color: ${vtheme?.price?.sale || "red"}">${$(S(s) - S(p, !1))}</span></span>`), v = `<span style="display: inline-flex; flex-direction: row; flex-wrap: wrap; column-gap: 8px;"><span style="text-decoration: line-through; color: ${vtheme?.price?.original || "black"}">${$(S(d))}</span><span style="color: ${vtheme?.price?.sale || "red"}">${$(S(d) - S(u, !1))}</span></span>`;
                        if (c?.[l]) {
                            s = c[l], p = D(_?.[r]?.price, s), d = D(_?.[r]?.total, s);
                            C({
                                type: r,
                                elPrices: p,
                                elTotals: d
                            });
                            for (const w of p) w.innerHTML = h;
                            for (const f of d) f.innerHTML = v;
                        }
                    }
                }
            }
            var e = D(_?.[r]?.subtotal), g = parseFloat(o), m = parseFloat(n);
            if (C({
                subTotal: g,
                discount: m,
                elSubtotals: e
            }), e.length && g && m) for (const b of e) b.innerHTML = `<span style="display: flex;text-align:right; justify-content: flex-end">${$(S(g) - S(m, !1))}</span><span style="display: flex; align-items: center; gap: 4px; padding-left: 8px; color: ${vtheme?.price?.sale || "red"}; font-size: 14px; text-align:right">${t ? '<svg aria-hidden="true" width="14" height="14" focusable="false" viewBox="0 0 12 12"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 0h3a2 2 0 012 2v3a1 1 0 01-.3.7l-6 6a1 1 0 01-1.4 0l-4-4a1 1 0 010-1.4l6-6A1 1 0 017 0zm2 2a1 1 0 102 0 1 1 0 00-2 0z" fill="currentColor"></path></svg>' + t + "</span>" : ""}</span>`;
        };
        return class {
            constructor() {
                this.cart = {}, this.product = {}, this.collection = {}, this.discount = {
                    cart: {},
                    product: {},
                    collection: {}
                }, this.lastInp = {};
            }
            fetchVeeper = async (t, e, a = !0) => {
                try {
                    var n = {
                        method: e ? "POST" : "GET",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        ...e ? {
                            body: JSON.stringify({
                                ...e,
                                ...a ? await r() : {}
                            })
                        } : {}
                    };
                    return await (await fetch(f + t, n)).json();
                } catch (t) {
                    return {
                        code: 400,
                        status: !1,
                        message: "API Error"
                    };
                }
            };
            checkCampaign = async t => {
                try {
                    var e = new URLSearchParams({
                        code: t,
                        time: i()
                    }), a = await (await fetch(f + "campaign/apply?" + e.toString())).json();
                    if (2e3 === a?.code) return await h("campaign_code", t, 21600), 
                    await h("campaign_id", "campaign_" + a.data.campaign_id, 21600), 
                    {
                        code: 200,
                        message: "🏷️" + a.data.message
                    };
                } catch (t) {
                    return await h("campaign_code", "", 1), await h("campaign_id", "", 1), 
                    {
                        code: 400,
                        message: "🏷️ Your discount code is not valid !"
                    };
                }
            };
            getCart = async () => {
                var {
                    token: t,
                    items: e
                } = await (await fetch("/cart.js")).json();
                let p = [];
                return e.forEach(t => {
                    var {
                        id: e,
                        quantity: a,
                        product_id: n,
                        variant_id: i,
                        price: r
                    } = t, o = t?.properties?.shipping_interval_frequency || !1, c = t?.selling_plan_allocation?.selling_plan?.recurring_deliveries || !1, l = t?.selling_plan_allocation?.selling_plan?.id || "";
                    let s = o || c ? "subscription" : "";
                    v(t) && (s = "insurance"), p.push({
                        id: e,
                        quantity: a,
                        product_id: n,
                        variant_id: i,
                        price: r,
                        type: s,
                        selling_plan: l
                    });
                }), {
                    cartToken: t,
                    cartData: p
                };
            };
            getProduct = async () => {
                var a = x(".rc-selling-plans"), n = x('input[name="purchaseOption"]'), i = x('input[value="one_time"]:checked');
                let r = !!(a || n && !i) ? "subscription" : "";
                if ("product" !== s) return {
                    product_id: this?.product?.pid || null,
                    product_variant_id: this?.product?.vid || null,
                    quantity: 1,
                    type: r
                };
                {
                    var a = x(".v-product"), {
                        product: n,
                        selectedVariantId: i
                    } = window?.ShopifyAnalytics?.meta || {};
                    let t = n?.id || null, e = p("variant") || p("v") || i || null;
                    return e = a ? (t = a.getAttribute("pid") || null, a.getAttribute("vid") || null) : (t = b?.product || null, 
                    b?.variant || null), {
                        product_id: t,
                        product_variant_id: e,
                        quantity: 1,
                        type: r
                    };
                }
            };
            getCollection = async () => {
                let t = D(".v-collection");
                if ((t = t?.length ? t : D(_?.collection?.grid)) && t.length) {
                    let a = {};
                    return t.forEach(t => {
                        var e = x("a[href^='/products/']", t) || x("a[href*='/collections/']", t);
                        e && (e = new URL(e.href).pathname.split("/").pop(), a[e] = !0, 
                        t.setAttribute("handle", e));
                    }), Object.keys(a);
                }
                return [];
            };
            getCartDiscount = async () => {
                var t = await this.getCart(), e = t?.cartData || [], a = this.cart?.cartData || [];
                if (C({
                    type: "cartJson",
                    oldData: a,
                    newData: e,
                    data: t,
                    isSame: y(a, e)
                }), y(a, e) || (this.cart = t || {}, !t?.cartToken)) return {};
                m({
                    attributes: {
                        __token: t.cartToken?.split("?key")?.[0] || ""
                    }
                });
                var a = await this.fetchVeeper("apply_discount", t, !0), n = document.querySelector("free-gift");
                if (C({
                    type: "cartDiscount",
                    data: a
                }), n) {
                    t = t?.cartData || [];
                    let i = {};
                    t?.forEach(t => {
                        var {
                            product_id: t,
                            variant_id: e,
                            price: a,
                            quantity: n
                        } = t;
                        i["" + t] = {
                            id: "" + e,
                            quantity: n,
                            price: (a / 100).toFixed(2),
                            inCart: !0
                        };
                    });
                    var [ t, n ] = n.useState({});
                    n({
                        ...t,
                        from: "apply_discount",
                        cart: i
                    });
                }
                return this.discount.cart = a.data, {
                    lineItems: e,
                    discounts: a.data
                };
            };
            getProductDiscount = async () => {
                var t = await this.getCart(), e = await this.getProduct(), a = (C({
                    type: "cartJson",
                    data: t
                }), C({
                    type: "productJson",
                    data: e
                }), await this.fetchVeeper("discount", {
                    ...e,
                    cartData: t?.cartData || []
                }, !0)), n = (C({
                    type: "productDiscount",
                    data: a
                }), a?.data?.giftInfo?.gifts || []), t = t?.cartData || [];
                let i = {}, r = (t?.forEach(t => {
                    var {
                        product_id: t,
                        variant_id: e,
                        price: a,
                        quantity: n
                    } = t;
                    i["" + t] = {
                        id: "" + e,
                        quantity: n,
                        price: (a / 100).toFixed(2),
                        inCart: !0
                    };
                }), t.map(t => t.product_id));
                t = n.filter(t => !r.includes(parseInt(t.product_id))), a?.data?.giftInfo && delete a.data.giftInfo, 
                n = a?.data || {};
                return n.cart = i, n.gifts = t, n.pid = e?.product_id || "", this.discount.product = n;
            };
            getCollectionDiscount = async () => {
                var t = await this.getCart(), e = await this.getCollection();
                return C({
                    type: "cartJson",
                    data: t
                }), C({
                    type: "collectionJson",
                    data: e
                }), e?.length ? (t = await this.fetchVeeper("multiple_discounts_with_handle", {
                    ...t,
                    products: e
                }), C({
                    type: "collectionDiscount",
                    data: t
                }), this.discount.cart = t.data, t.data) : null;
            };
            showCartDiscount = async () => {
                C("Show Cart Discount :");
                var {
                    lineItems: a,
                    discounts: n
                } = await this.getCartDiscount(), {
                    code: i,
                    shipping_code: r
                } = n || {};
                if (i) {
                    T({
                        code: i,
                        shipping: r,
                        apply: !1
                    });
                    var {
                        pageType: o,
                        cartType: c
                    } = b, {
                        products: l,
                        discount_value: s,
                        subtotal: p
                    } = n || {};
                    "cart" !== o && [ "drawer", "pop-up", "popup", "notification" ].includes(c), 
                    C({
                        pageType: o,
                        cartType: c,
                        selector: _
                    });
                    let t = D(".v-cart"), e = D(".v-drawer");
                    if ((t.length || e.length) && l?.length) {
                        for (let t = 0; t < l.length; t++) {
                            var {
                                q: d,
                                vid: u,
                                price: h,
                                discount: v
                            } = l[t], h = parseFloat(h), v = parseFloat(v) / d, g = h * d, d = v * d, h = `<span style="display: inline-flex; flex-direction: row; flex-wrap: wrap; gap: 8px;"><span style="text-decoration: line-through; color: ${vtheme?.price?.original || "black"}">${$(S(h))}</span><span style="color: ${vtheme?.price?.sale || "red"}">${$(S(h) - S(v, !1))}</span></span>`, g = `<span style="display: inline-flex; flex-direction: row; flex-wrap: wrap; gap: 8px;"><span style="text-decoration: line-through; color: ${vtheme?.price?.original || "black"}">${$(S(g))}</span><span style="color: ${vtheme?.price?.sale || "red"}">${$(S(g) - S(d, !1))}</span></span>`, m = x(`.v-cart .v-item[vid="${u}"] .v-price`), y = x(`.v-drawer .v-item[vid="${u}"] .v-price`), w = x(`.v-cart .v-item[vid="${u}"] .v-total`), u = x(`.v-drawer .v-item[vid="${u}"] .v-total`);
                            m && v && (m.innerHTML = h), y && v && (y.innerHTML = h), 
                            w && d && (w.innerHTML = g), u && d && (u.innerHTML = g);
                        }
                        var c = parseFloat(p), p = parseFloat(s), s = x(".v-cart .v-subtotal"), f = x(".v-drawer .v-subtotal");
                        s && c && p && (s.innerHTML = `<span style="display: flex;text-align:right; justify-content: flex-end">${$(S(c) - S(p, !1))}</span><span style="display: block; line-height: 14px; color: ${vtheme?.price?.sale || "red"}; font-size: 14px;text-align:right">${i ? '<svg aria-hidden="true" width="14" height="14" focusable="false" viewBox="0 0 12 12"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 0h3a2 2 0 012 2v3a1 1 0 01-.3.7l-6 6a1 1 0 01-1.4 0l-4-4a1 1 0 010-1.4l6-6A1 1 0 017 0zm2 2a1 1 0 102 0 1 1 0 00-2 0z" fill="currentColor"></path></svg>&nbsp;' + i + "</span>" : ""}</span>`), 
                        f && c && p && (f.innerHTML = `<span style="display: flex;text-align:right; justify-content: flex-end">${$(S(c) - S(p, !1))}</span><span style="display: block; line-height: 14px; color: ${vtheme?.price?.sale || "red"}; font-size: 14px;text-align:right">${i ? '<svg aria-hidden="true" width="14" height="14" focusable="false" viewBox="0 0 12 12"><path fill-rule="evenodd" clip-rule="evenodd" d="M7 0h3a2 2 0 012 2v3a1 1 0 01-.3.7l-6 6a1 1 0 01-1.4 0l-4-4a1 1 0 010-1.4l6-6A1 1 0 017 0zm2 2a1 1 0 102 0 1 1 0 00-2 0z" fill="currentColor"></path></svg>&nbsp;' + i + "</span>" : ""}</span>`);
                    } else if (_?.show_cart) {
                        s = D(_?.cart?.cart), f = D(_?.drawer?.drawer);
                        C({
                            elCarts: s,
                            elDrawers: f
                        });
                        for (const t of s) await E(i, t, a, n, "cart");
                        for (const t of f) await E(i, t, a, n, "drawer");
                    } else {
                        T({
                            code: i,
                            shipping: r,
                            apply: !0
                        });
                        c = window?.Rebuy?.Cart;
                        c && (i || r) && (i && c.setDiscount(i), r && c.setDiscount(r), 
                        "cart" !== o) && c.fetchCart(), await fetch("/cart/update.js?ignore=veeper", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({
                                updates: {}
                            })
                        });
                    }
                }
            };
            showProductDiscount = async () => {
                C("Show Product Discount:");
                var t = await this.getProductDiscount(), {
                    pid: e,
                    lebel: a,
                    show_stp: n,
                    timestamp: i,
                    total: r,
                    discount_value: o,
                    discount_percentage: c
                } = t;
                n && (n = t?.cart || [], t = t?.gifts || [], r = parseFloat(r) || 0, 
                o = parseFloat(o) || 0, c = parseFloat(c) || 0, t.length && this.showGiftCard(n, t, e), 
                a && i && this.showCountdown(a, i), o) && (n = {}, (t = x(".v-product")) ? (n.sale = x(".v-sale", t) || null, 
                n.regular = x(".v-regular", t) || null, n.compare = x(".v-compare", t) || null, 
                n.savingPrice = x(".v-saving.value", t) || null, n.savingRatio = x(".v-saving.percent", t) || null) : (n.sale = x(_.product.sale) || null, 
                n.regular = x(_.product.regular) || null, n.compare = x(_.product.compare) || null, 
                n.savingPrice = x(_.product.savingValue) || null, n.savingRatio = x(_.product.savingPercent) || null), 
                w(n, r, o, c, "product"));
            };
            showCollectionDiscount = async () => {
                C("Show Collection Discounts :");
                var t = (await this.getCollectionDiscount() || []).reduce((t, e) => {
                    var {
                        handle: e,
                        price: a,
                        discount: n,
                        show_stp: i
                    } = e;
                    return t[e] = {
                        price: parseFloat(a),
                        discount: parseFloat(n),
                        percentage: Math.round(parseFloat(n) / parseFloat(a) * 100),
                        show_stp: i
                    }, t;
                }, {});
                C({
                    discountsByHandle: t
                });
                for (const c in t) {
                    var {
                        price: a,
                        discount: n,
                        percentage: i,
                        show_stp: e
                    } = t[c];
                    if (n && !1 !== e) {
                        let e = D(`.v-collection[handle="${c}"]`);
                        if (e && e.length) for (let t = 0; t < e.length; t++) {
                            var r = {};
                            r.sale = x(".v-sale", e[t]) || null, r.regular = x(".v-regular", e[t]) || null, 
                            r.compare = x(".v-compare", e[t]) || null, r.savingPrice = x(".v-saving.value", e[t]) || null, 
                            r.savingRatio = x(".v-saving.percent", e[t]) || null, 
                            w(r, a, n, i, "collection");
                        }
                        if ((!e || !e.length) && (e = D(`${_.collection.grid}[handle="${c}"]`)) && e.length) for (let t = 0; t < e.length; t++) {
                            var o = {};
                            o.sale = x(_.collection.sale, e[t]) || null, o.regular = x(_.collection.regular, e[t]) || null, 
                            o.compare = x(_.collection.compare, e[t]) || null, o.savingPrice = x(_.collection.savingValue, e[t]) || null, 
                            o.savingRatio = x(_.collection.savingPercent, e[t]) || null, 
                            w(o, a, n, i, "collection");
                        }
                    }
                }
            };
            showGiftCard = async (t, e, a) => {
                let n = document.querySelector("free-gift");
                var i, r;
                !n && (i = (i = c("addtocart|buynow|buyitnow", 'button, input[type="submit"], input[type="button"]'))?.length ? o(i[i.length - 1]) : null) && (n = document.createElement("free-gift"), 
                i?.insertAdjacentElement("afterend", n)), n && ([ i, r ] = n.useState({}), 
                r({
                    ...i,
                    data: {
                        gifts: e
                    },
                    from: "discount",
                    pid: a,
                    cart: t
                }));
            };
            showCountdown = async (t, e) => {
                let a = document.querySelector("veeper-countdown");
                var n;
                !a && (n = (n = c("addtocart|buynow|buyitnow", 'button, input[type="submit"], input[type="button"]'))?.length ? o(n[0]) : null) && (a = document.createElement("veeper-countdown"), 
                n?.insertAdjacentElement("beforebegin", a)), a && a.show(t, e);
            };
            showAnnouncement = async (e, a = 10) => {
                if (e) {
                    let t = document.querySelector("veeper-announcement");
                    t || (t = document.createElement("veeper-announcement"), document.body.insertAdjacentElement("afterbegin", t)), 
                    t && (t.setAttribute("color", vtheme?.announcement?.color || "black"), 
                    t.setAttribute("background", vtheme?.announcement?.background || "black"), 
                    t.show(e, 1e3 * a));
                }
            };
            _init_ = async () => {
                var t = performance.now();
                let r = "", o = x("input[name='pid']")?.getAttribute("pid") || null, c = x("input[name='vid']")?.getAttribute("vid") || null;
                var e = p("code") || p("rstr") || p("sca_ref");
                if (e && !l?.announcement) {
                    const p = new URLSearchParams({
                        code: e,
                        time: i()
                    });
                    var a, n = await this.fetchVeeper("campaign/apply?" + p.toString(), null, !1);
                    2e3 === n?.code && ({
                        message: n,
                        campaign_id: a
                    } = n.data, a = a ? "campaign_" + a : "", await h("campaign_code", e, 21600), 
                    await h("campaign_id", a, 21600), await m({
                        attributes: {
                            _campaign: a
                        }
                    }), e = "🏷️" + n, b?.announcement) && await this.showAnnouncement(e, 10);
                }
                new PerformanceObserver(async t => {
                    for (const i of t.getEntries()) {
                        var e = new URL(window.location.href), a = new URL(i.name);
                        if (e.origin === a.origin) if (L[0].test(a.pathname) && !d(a.pathname)) if (C(a.pathname), 
                        C(a), "product" !== s) {
                            var n = new URLSearchParams(a.search);
                            let t = null, e = n.get("variant") || n.get("v");
                            e = e && parseFloat(e);
                            n = await (await fetch(a.origin + a.pathname + ".json")).json();
                            n?.product?.id && (t = n.product.id), !e && n?.product?.variants?.length && (e = n.product.variants[0].id), 
                            this.product = {
                                ...this.product,
                                url: a.href,
                                pid: t,
                                vid: e,
                                qty: 1
                            };
                        } else e.href !== r && (r = e.href, c = p("variant") || p("v") || window?.ShopifyAnalytics?.meta?.selectedVariantId, 
                        C("Variant ID : " + c), L[0].test(e.pathname)) && c && (this.product = {
                            ...this.product,
                            url: a,
                            pid: o,
                            vid: c,
                            qty: 1
                        }, u("veeper:product", this.product), l?.product || await this.showProductDiscount()); else L[1].test(a.pathname) && !d(a.pathname) ? (C(a.pathname), 
                        C(a), u("veeper:collection", {
                            url: a
                        }), l?.collection || await this.showCollectionDiscount()) : L[2].test(a.pathname) && !a.search.includes("ignore=veeper") && (C(a.pathname), 
                        C(a), u("veeper:cart", {
                            url: a
                        }), l?.cart || await this.showCartDiscount());
                    }
                }).observe({
                    entryTypes: [ "resource" ]
                }), x(_?.cartBubble || 'a[href="/cart"]')?.addEventListener("click", async () => {
                    C("Cart Bubble Clicked"), l?.cart || await this.showCartDiscount();
                }), l?.collection || await this.showCollectionDiscount(), l?.cart || "cart" !== s || await this.showCartDiscount(), 
                l?.product || "product" !== s || await this.showProductDiscount(), 
                document.addEventListener("change", async t => {
                    var {
                        id: e,
                        name: a
                    } = t.target, n = t.target.getAttribute("class");
                    /quantity|qty/i.test(a + e + n) && (this.lastInp = {
                        elem: t.target,
                        time: Date.now()
                    });
                }), document.addEventListener("veeper:cart", async t => {}), document.addEventListener("veeper:product", async t => {}), 
                document.addEventListener("veeper:collection", async t => {}), document.addEventListener("veeper:announce", async t => {}), 
                document.addEventListener("veeper:giftcard", async t => {}), document.addEventListener("veeper:countdown", async t => {}), 
                C(`Veeper initialized in ${performance.now() - t}ms`);
            };
        };
    })();
    void 0 === window.veeper && (window.veeper = new t(), window.addEventListener("load", async function() {
        await window.veeper._init_();
    }));
}();